snippet combinationBacktrack
alias comb
abbr func backtrack(k, n int, start, cur []int)
options head
  out := make([][]int,0)

  var backtrack func(k, n, start int, cur []int)
  backtrack = func(k, n, start int, cur []int) {
    if k == 0 && n == 0 {
      out = append(out, append([]int{}, cur...))
      return
  }
  if k == 0 || n == 0 {
    return
  }
  for i := start; i <= 9; i++ {
    backtrack(k-1, n-i, i+1, append(cur, i))
    }
  }
  backtrack(k, n, 1, nil)
  return out
