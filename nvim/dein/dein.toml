[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
let g:airline_powerline_fonts = 1
let g:airline_theme = 'badwolf'
let g:airline#extensions#tabline#enabled = 1
let g:airline_section_z = airline#section#create(['windowswap', '%3p%% ', 'linenr', ':%3v'])
'''

# Elixir
[[plugins]]
repo = 'elixir-editors/vim-elixir'
[[plugins]]
repo = 'mhinz/vim-mix-format'
hook_add = '''
let g:mix_format_on_save = 1
'''

# Toml
[[plugins]]
repo  = 'cespare/vim-toml'

# LSP
[[plugins]]
repo = 'prabirshrestha/async.vim'
[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'
[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'
[[plugins]]
repo = 'prabirshrestha/vim-lsp'
[[plugins]]
repo = 'mattn/vim-lsp-settings'
hook_add = '''
if empty(globpath(&rtp, 'autoload/lsp.vim'))
  finish
endif

function! s:on_lsp_buffer_enabled() abort
  setlocal omnifunc=lsp#complete
  setlocal signcolumn=yes
  nmap <buffer> gd <plug>(lsp-definition)
  nmap <buffer> <f2> <plug>(lsp-rename)
  inoremap <expr> <cr> pumvisible() ? "\<c-y>\<cr>" : "\<cr>"
endfunction

augroup lsp_install
  au!
  autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
augroup END
command! LspDebug let lsp_log_verbose=1 | let lsp_log_file = expand('~/lsp.log')

let g:lsp_diagnostics_enabled = 0
let g:lsp_diagnostics_echo_cursor = 0
let g:lsp_text_edit_enabled = 0
let g:lsp_fold_enabled = 0
'''

# let g:lsp_signs_enabled = 1
# let g:lsp_diagnostics_echo_cursor = 1
# let g:lsp_signs_error = {'text': '⨉'}
# let g:lsp_signs_warning = {'text': '⚠'}
# let g:lsp_signs_information = {'text': '!'}
# let g:lsp_signs_hint = {'text': '?'} "
# '''

[[plugins]]
repo = 'mattn/vim-lsp-icons'
[[plugins]]
repo = 'mattn/vim-goimports'
# [[plugins]]
# repo = 'hrsh7th/vim-vsnip'
# [[plugins]]
# repo = 'hrsh7th/vim-vsnip-integ'


[[plugins]]
repo = 'thomasfaingnaert/vim-lsp-snippets'
[[plugins]]
repo = 'thomasfaingnaert/vim-lsp-neosnippet'
